/*
字符串 S 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一字母最多出现在一个片段中。返回一个表示每个字符串片段的长度的列表。
示例：
输入：S = "ababcbacadefegdehijhklij"
输出：[9,7,8]
解释：
划分结果为 "ababcbaca", "defegde", "hijhklij"。
每个字母最多出现在一个片段中。
像 "ababcbacadefegde", "hijhklij" 的划分是错误的，因为划分的片段数较少。
提示：
S的长度在[1, 500]之间。
S只包含小写字母 'a' 到 'z' 。
*/

class Solution {
public:
    vector<int> partitionLabels(string S) {
        vector<int> ends(26, -1);
        for (int i = 0; i < S.size(); i++)
            ends[S[i] - 'a'] = i;

        vector<int> ret;
        int i = 0;
        while (i < S.size())
        {
            int r = ends[S[i] - 'a'];
            for (int j = i + 1; j <= r; j++)
                r = max(r, ends[S[j] - 'a']);
            ret.push_back(r - i + 1);
            i = r + 1;
        }
        return ret;
    }
};
