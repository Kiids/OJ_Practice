/*
找出数组中重复的数字。
在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。
示例 1：
输入：
[2, 3, 1, 0, 2, 5, 3]
输出：2 或 3 
限制：
2 <= n <= 100000
*/

class Solution {
public:
    int findRepeatNumber(vector<int>& nums) {
        set<int> s;
        int ret = nums[0];
        for (auto e : nums)
        {
            if (s.insert(e).second == false)
            {
                ret = e;
                break;
            }
        }
        return ret;
    }
};

// 原地置换算法
class Solution {
public:
    int findRepeatNumber(vector<int>& nums) {
        for(int i = 0; i < nums.size(); ++i) {
            while(i != nums[i]) {  //将数字与下标对应起来
                if(nums[i] == nums[nums[i]])  //如果准备移动的数字已经等于对应位置上的数字则说明数字重复
                    return nums[i];
                swap(nums[i], nums[nums[i]]);
            }
        }
        return 0;
    }
};

