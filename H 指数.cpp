/*
给你一个整数数组 citations ，其中 citations[i] 表示研究者的第 i 篇论文被引用的次数。计算并返回该研究者的 h 指数。
根据维基百科上 h 指数的定义：h 代表“高引用次数”，一名科研人员的 h指数是指他（她）的 （n 篇论文中）总共有 h 篇论文分别被引用了至少 h 次。且其余的 n - h 篇论文每篇被引用次数 不超过 h 次。
如果 h 有多种可能的值，h 指数 是其中最大的那个。
示例 1：
输入：citations = [3,0,6,1,5]
输出：3 
解释：给定数组表示研究者总共有 5 篇论文，每篇论文相应的被引用了 3, 0, 6, 1, 5 次。
     由于研究者有 3 篇论文每篇 至少 被引用了 3 次，其余两篇论文每篇被引用 不多于 3 次，所以她的 h 指数是 3。
示例 2：
输入：citations = [1,3,1]
输出：1
提示：
n == citations.length
1 <= n <= 5000
0 <= citations[i] <= 1000
*/

class Solution {
public:
    int hIndex(vector<int>& citations) {
        int l = 0, r = citations.size();
        while (l < r)
        {
            int m = (l + r + 1) / 2;  // +1为了避免n=1时，陷入死循环
            int t = 0;
            for (auto x : citations)
                if (x >= m)
                    t++;
            if (t < m)
                r = m - 1;            // 不满足条件，收缩右边界
            else
                l = m;                // 满足条件，扩大左边界
        }
        return l;
    }
};

class Solution {
public:
    int hIndex(vector<int>& citations) {
        int sum = 0;
        vector<int> v(citations.size() + 1);
        for (int i = 0; i < citations.size(); i++)
        {
            if (citations[i] >= citations.size())
                v[citations.size()]++;
            else 
                v[citations[i]]++;
        }
        for (int i = citations.size(); i >= 0; i--)  // 要求h指数尽可能大，所以从后往前遍历
        {
            sum += v[i];
            if (sum >= i)             // 满足条件跳出
                return i;
        }
        return 0;
    }
};
