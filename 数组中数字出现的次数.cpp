/*
一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。
示例 1：
输入：nums = [4,1,4,6]
输出：[1,6] 或 [6,1]
示例 2：
输入：nums = [1,2,10,4,1,4,3,3]
输出：[2,10] 或 [10,2]
限制：
2 <= nums <= 10000
*/

class Solution {
public:
    vector<int> singleNumbers(vector<int>& nums) {
        int a = nums[0];
        int b = 0;
        int c = 0;
        int n = 1;
        vector<int> ret(2, 0);
        for (int i = 1; i < nums.size(); i++)
            a ^=nums[i];     
        
        while (true)
        {
            if ((a & n) == n)
               //找到为 1 的位置
                break;
            n *= 2;
        }
        for (int i = 0; i < nums.size(); i++)
        {
            if ((nums[i] & n ) == n)
                b ^= nums[i];
            else
                c ^=nums[i];
        }
        
        ret[0] = b;
        ret[1] = c;
        return ret;
    }
};
