/*
给定一个非负整数 n，计算各位数字都不同的数字 x 的个数，其中 0 ≤ x < 10^n 。
示例:
输入: 2
输出: 91 
解释: 答案应为除去 11,22,33,44,55,66,77,88,99 外，在 [0,100) 区间内的所有数字。
*/

class Solution {
public:
    int countNumbersWithUniqueDigits(int n) {
        vector<int> dp(n + 1);
        for(int i = 2; i <= n; i++)
            dp[i] = dp[i - 1] * 10 + (9 * pow(10, i - 2) - dp[i - 1]) * (i - 1);
        int sum = 0;
        for (auto& x : dp)
            sum += x;
        return pow(10, n) - sum;
    }
};

//dp[i] 表示i位数字里重复的数字的个数
//dp[n+1], 预留d[0]
//dp[0] = 0 , 0位数字没有重复数字
//dp[1] = 0 , 1位数字没有重复数字
//前面i-1有重复，那么最后一位是0~9的10个数字都可以： dp[i-1]*10
//前面i-1没重复，那么最后一位就是i-1里取一个就重复了：(9*pow(10, i-2)-dp[i-1])*(i-1)，如下：
//9*pow(10, i-2) 表示对于i-1位数字有这么多种可能，9是1-9在第一位，后面就是 10^(i-2)
//9*pow(10, i-2)-dp[i-1] 表示i-1没重复的数字个数
//(*)*(i-1) 取i-1位数字里一个即可
//结果 pow(10,n) - sum(d[i]) (总数字 减去 重复情况的数字之和)

