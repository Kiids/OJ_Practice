/*
有两种形状的瓷砖：一种是 2 x 1 的多米诺形，另一种是形如 "L" 的托米诺形。两种形状都可以旋转。
给定整数 n ，返回可以平铺 2 x n 的面板的方法的数量。返回对 109 + 7 取模 的值。
平铺指的是每个正方形都必须有瓷砖覆盖。两个平铺不同，当且仅当面板上有四个方向上的相邻单元中的两个，使得恰好有一个平铺有一个瓷砖占据两个正方形。
示例 1:
输入: n = 3
输出: 5
解释: 五种不同的方法如上所示。
示例 2:
输入: n = 1
输出: 1
提示：
1 <= n <= 1000
*/

class Solution {
public:
    int numTilings(int n) {
        int MOD = 1000000007;
        if (n < 3)
            return n;
        vector<long long> dp(n + 1);
        dp[1] = 1;
        dp[2] = 2;
        dp[3] = 5;
        for (int i = 4; i <= n; i++)
            dp[i] = (2 * dp[i - 1] + dp[i - 3]) % MOD;
        return dp[n];
    }
};

// f(n) = f(n-1) + f(n-2) + 2*(f(n-3)+f(n-4)+...+f(1)+f(0))
// f(n-1) = f(n-2)+f(n-3)+2*(f(n-4)+f(n-5)+...+f(0))
// f(n) = f(n-1)+f(n-1)+f(n-3)

