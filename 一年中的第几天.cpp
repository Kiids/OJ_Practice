/*
给你一个按 YYYY-MM-DD 格式表示日期的字符串 date，请你计算并返回该日期是当年的第几天。
通常情况下，我们认为 1 月 1 日是每年的第 1 天，1 月 2 日是每年的第 2 天，依此类推。每个月的天数与现行公元纪年法（格里高利历）一致。
示例 1：
输入：date = "2019-01-09"
输出：9
示例 2：
输入：date = "2019-02-10"
输出：41
示例 3：
输入：date = "2003-03-01"
输出：60
示例 4：
输入：date = "2004-03-01"
输出：61
提示：
date.length == 10
date[4] == date[7] == '-'，其他的 date[i] 都是数字。
date 表示的范围从 1900 年 1 月 1 日至 2019 年 12 月 31 日。
*/

class Solution {
public:
    int days[2][13] = {{0, 31,28, 31, 30, 31, 30, 31,31,30,31, 30, 31},
                       {0, 31,29, 31, 30, 31, 30, 31,31,30,31, 30, 31}};

    bool IsLeap(int y)
    {
        return (!(y % 4) && (y % 100)) || !(y % 400);
    }

    int dayOfYear(string date) {
        int y, m, d, n = 1, nd = 1, nm = 1;
        sscanf(date.c_str(), "%d-%d-%d", &y, &m, &d);

        while(nd < d || nm < m){
            nd++;
            if (nd == days[IsLeap(y)][nm] + 1)
            {
                nm++;
                nd = 1;
            }
            n++;
        }
        return n;
    }
};
